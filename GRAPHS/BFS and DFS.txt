<--------------------BFS---------------------->

vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        int visited[V]={0};
        visited[0]=1;
        queue<int>q;
        q.push(0);
        vector<int>bfs;
        while(!q.empty())
        {
            int node=q.front();
            q.pop();
            bfs.push_back(node);
            for(auto i : adj[node])
            {
                if(!visited[i])
                {
                    visited[i]=1;
                    q.push(i);
                }
            }
        }
        return  bfs;
    }

<------------------DFS----------------------->

 void dfs(int node,vector<int>&v,vector<int>adj[],int visited[])
    {
            visited[node]=1;
            v.push_back(node);
            for(auto i:adj[node])
            {
                if(!visited[i])
                dfs(i,v,adj,visited);
            }
    }
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        int visited[V]={0};
        int start=0;
        vector<int>v;
        dfs(start,v,adj,visited);
        return v;
    }
